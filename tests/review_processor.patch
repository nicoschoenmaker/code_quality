diff --git a/Lib/ReviewProcessor.php b/Lib/ReviewProcessor.php
index dfe8f137c82651e6f2140563203d28e89807db09..c2aa4095f9fbd87216e6e7d6e40af038ba7632ad 100644
--- a/Lib/ReviewProcessor.php
+++ b/Lib/ReviewProcessor.php
@@ -8,6 +8,7 @@ use Symfony\Component\Filesystem\Exception\IOException;
 
 use Hostnet\CodeQualityBundle\Entity\Review,
     Hostnet\CodeQualityBundle\Lib\EntityFactory,
+    Hostnet\CodeQualityBundle\Parser\OriginalFileRetriever\OriginalFileRetrievalFactory,
     Hostnet\CodeQualityBundle\Parser\CommandLineUtility,
     Hostnet\CodeQualityBundle\Parser\ParserFactory;
 
@@ -27,6 +28,11 @@ class ReviewProcessor
   private $em;
 
   /**
+   * @var OriginalFileRetrievalFactory
+   */
+  private $ofrf;
+
+  /**
    * @var CommandLineUtility
    */
   private $clu;
@@ -41,22 +47,14 @@ class ReviewProcessor
    */
   private $ef;
 
-  /**
-   * The raw file url mask setting configured which
-   * is used to retrieve the original file
-   *
-   * @var string
-   */
-  private $raw_file_url_mask;
-
   public function __construct(EntityManager $em, EntityFactory $ef,
-    CommandLineUtility $clu, ParserFactory $pf, $raw_file_url_mask)
+    OriginalFileRetrievalFactory $ofrf, CommandLineUtility $clu, ParserFactory $pf)
   {
     $this->em = $em;
     $this->ef = $ef;
+    $this->ofrf = $ofrf;
     $this->clu = $clu;
     $this->pf = $pf;
-    $this->raw_file_url_mask = $raw_file_url_mask;
   }
 
   /**
@@ -79,27 +77,30 @@ class ReviewProcessor
     // Tell the Entity Factory whether we want to register the Review or not
     $this->ef->setRegister($register);
     $this->ef->persistAndFlush($review);
+    // Gets the correct original file retriever based on the config setting
+    $original_file_retriever = $this->ofrf->getOriginalFileRetrieverInstance();
     foreach($diff_files as $diff_file) {
       foreach($tools as $tool) {
         if($tool->supports($diff_file->getExtension())) {
-          // cgit implementation:
-          // Retrieve the original code file based on the repository raw file url mask
-          // and the original file name + parent revision number
-          // TODO Make more original file extraction implementations possible
-          $original_file = file_get_contents($this->raw_file_url_mask);
-          /*$original_file = file_get_contents(
-            $this->raw_file_url_mask .
-            $code_file->getSource() .
-            '?id2=' .
-            $code_file->getSourceRevision()
-          );*/
+
+          // Check if the diff file is new. If it's not new we retrieve the original file
+          // and merge it. If it's new we don't have to retrieve the original
+          // as there is none, so we just insert the whole diff code
+          if($diff_file->hasParent()) {
+            // Retrieves the original file based on the configured retrieval method
+            $original_file_retriever->retrieveOriginalFile($diff_file);
+            // Merge the diff with the original in order to be able
+            // to scan all the changes made in the actual code
+            $diff_file->mergeDiffWithOriginal(
+              $this->clu->getTempCodeQualityDirPath(),
+              $this->pf->getSCM()
+            );
+          } else {
+            //$diff_file->setNewDiffFile();
+          }
 
           // Let the file be processed by the given tool
-          $diff_file->processFile(
-            $tool,
-            $original_file,
-            $this->clu->getTempCodeQualityDirPath()
-          );
+          $diff_file->processFile($tool);
 
           // Request the Tool Output Parser from the Factory
           $additional_tool_properties = array('format' => $tool->getFormat());
